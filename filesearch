#!/usr/bin/python
from __future__ import print_function
import os
from datetime import datetime
from antipathy import Path
from scription import *
import re

@Command(
        regex=('pattern to match against file and directory names', ),
        path=('starting path (defaults to cwd)', OPTION, 'p', Path),
        files_only=('only search file names', FLAG),
        dirs_only=('only search dir names', FLAG),
        timestamp=('display timestamp of file', FLAG),
        all=('show all files/directories (even hidden)', FLAG),
        )
@Alias('fs')
def filesearch(files_only, dirs_only, timestamp, all, path, *regex):
    "Searches for `name` in `path`."
    print('searching %s for %r ' % (path, regex), ('', '(files only)')[files_only], ('', '(dirs only)')[dirs_only], sep='')
    base = ''
    if path is None:
        base = path = Path.getcwd()
    if not regex:
        show_all = True
    else:
        show_all = False
    for tree, dirs, files in path.walk():
        print('  ', tree, verbose=2)
        if not all:
            dirs[:] = [d for d in dirs if not d.startswith('.')]
            files[:] = [f for f in files if not f.startswith('.')]
        dirs.sort()
        files.sort()
        if not files_only:
            for d in dirs:
                if show_all:
                    print(tree/d-base, verbose=0)
                else:
                    for p in regex:
                        if re.search(p, d):
                            print(tree/d-base, verbose=0)
        if not dirs_only:
            for f in files:
                if show_all:
                    print(tree/f-base, verbose=0)
                else:
                    for p in regex:
                        if re.search(p, f):
                            if timestamp:
                                print(datetime.fromtimestamp((tree/f).stat()[8]), '   ', tree/f-base, verbose=0)       # mtime
                            else:
                                print(tree/f-base, verbose=0)       # mtime

Run()
