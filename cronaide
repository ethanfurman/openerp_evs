#!/usr/bin/env python2.7
from __future__ import print_function

from itertools import groupby
from textwrap import dedent
from scription import *
from scription import Execute, mail
from time import time
import sys

try:
    execfile('/etc/evs/cronaide.conf')
except:
    message = dedent("""\
            To: %s
            From: cron_check <noreply@nowhere.invalid>
            Subject: %s

            %s""")
    mail_server = 'localhost'


@Command(
        email=('Who to send a test mail to.',),
        server=('Server to use', OPTION),
        )
def test_mail(email, server=mail_server):
    msg = message % (email, 'test mail', 'hope you got this! :)')
    mail(mail_server, 25, msg)


@Command(
        email=('Who to send job output to.',),
        capture=('Send all output to <email>', FLAG, ),
        heartbeat=('Send notification of successful job run.', FLAG, ),
        passthrough=('Send STDOUT and STDERR streams to cron.', FLAG, ),
        job=('job to run', REQUIRED, ),
        )
def watch(email, capture, heartbeat, passthrough, *job):
    start = time()
    result = Execute(job)
    stop = time()
    elapsed = stop - start
    msg = None
    if 'ERROR' in result.stdout or result.returncode:
        msg = message % (
            email,
            'job failed:  %s' % job[0].split('/')[-1],
            '%s\n\nreturn code: %s\n\noutput\n======\n%s' % (' '.join(job), result.returncode, result.stdout),
            )
        mail(mail_server, 25, msg)
    else:
        if heartbeat:
            msg = message % (
                email,
                'heartbeat: %s' % job[0].split('/')[-1],
                'job: %s\nran in: approximately %d seconds' % (' '.join(job), elapsed),
                )
            mail(mail_server, 25, msg)
        if capture:
            msg = message % (
                email,
                'job:  %s' % job[0].split('/')[-1],
                '%s\n\nstdout\n======\n%s' % (' '.join(job), result.stdout),
                )
            mail(mail_server, 25, msg)
    if passthrough:
        print(result.stdout, end='')
        sys.exit(result.returncode)
    sys.exit(0)


@Command()
def check_cron():
    with open('/etc/crontab') as crontab:
        warnings = []
        for line in crontab:
            if line.startswith('#:cron_check:'):
                _, email, prog = line.rsplit(':', 2)
                cron_check = next(crontab)
                if cron_check[0] == '#':
                    addresses = email.split(',')
                    for addr in addresses:
                        warnings.append((addr, prog))
        warnings.sort()
        for email, progs in groupby(warnings, key=lambda ep: ep[0]):
            prog_names = []
            for _, prog in progs:
                prog_names.append(prog)
            msg = message % (email, 'disabled cron jobs', '\n%s'%'\n\t'.join(prog_names))
            mail(mail_server, 25, msg)

if __name__ == '__main__':
    Run()
